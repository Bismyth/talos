# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      id: ${{ steps.create_release.outputs.id }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Setup Node
        uses: actions/setup-node@v2.5.1
        with:
          node-version-file: .nvmrc

      - name: Build Web App
        run: |
          cd web-app
          npm install
          npm run build
          tar -C ./build -czf web-app.tar.gz ./
      - name: Upload Web App
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./web-app/web-app.tar.gz
          asset_name: web-app.tar.gz
          asset_content_type: application/gzip

      - name: Build API
        run: |
          cd server
          npm install
          npm run build
          tar -C ./build -czf server.tar.gz ./
      - name: Upload API
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./server/server.tar.gz
          asset_name: server.tar.gz
          asset_content_type: application/gzip

  build-desktop:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v2.5.1
        with:
          node-version-file: .nvmrc

      - name: Build Desktop App
        run: |
          cd desktop-app
          npm install
          npm run make

      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.build.outputs.id }}
          assets_path: desktop-app/make/squirrel.windows/x64
